generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  lastName String
  phone    String
  address  String
  city     String
  email    String @unique
  password String
  rol      String

  score       Score[]
  orderStatus Order[]
}

model LocalProfile {
  id           Int     @id @default(autoincrement())
  description  String?
  name         String
  address      String
  city         String
  logo         String? @default("https://cdn-icons-png.flaticon.com/512/2702/2702614.png")
  type         String?
  averageScore Float?
  password     String
  email        String  @unique
  rol          String

  product     Product[]
  score       Score[]
  orderStatus Order[]
}

model DeliveryDriverProfile {
  id           Int    @id @default(autoincrement())
  name         String
  lastName     String
  averageScore Float?
  email        String @unique
  password     String
  rol          String

  score       Score[]
  vehicle     Vehicle[]
  orderStatus Order[]
}

model Product {
  id          Int    @id @default(autoincrement())
  productName String
  description String
  price       Float
  image       String @default("https://cdn-icons-png.flaticon.com/512/2771/2771406.png")
  sellerId    Int

  localId LocalProfile @relation(fields: [sellerId], references: [id])
}

model Order {
  id           Int      @id @default(autoincrement())
  status       Status   @default(PENDIENTE)
  orderDate    DateTime @default(now())
  updateStatus DateTime @updatedAt

  products String

  sellerId   Int
  userId     Int
  deliveryId Int?

  seller   LocalProfile           @relation(fields: [sellerId], references: [id])
  buyer    User                   @relation(fields: [userId], references: [id])
  delivery DeliveryDriverProfile? @relation(fields: [deliveryId], references: [id])
}

enum Status {
  PENDIENTE
  RECHAZADO
  ACEPTADO
  PREPARANDO
  COCINADO
  EN_CAMINO
  RECIBIDO
  FINALIZADO
}

model Vehicle {
  id           Int    @id @default(autoincrement())
  brand        String
  model        String
  licensePlate String
  vehicleOwner Int
  color        String
  year         Int

  deliveryId DeliveryDriverProfile @relation(fields: [vehicleOwner], references: [id])
}
 
model Score {
  id         Int  @id @default(autoincrement())
  userId     Int
  score      Int  @default(1)
  deliveryId Int?
  localId    Int?

  author   User                   @relation(fields: [userId], references: [id])
  delivery DeliveryDriverProfile? @relation(fields: [deliveryId], references: [id])
  local    LocalProfile?          @relation(fields: [localId], references: [id])
}
